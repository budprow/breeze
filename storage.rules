rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {

    // This rule applies to files inside a specific restaurant's 'documents' folder.
    match /documents/{restaurantId}/{allPaths=**} {

      // --- FINAL SECURE RULE ---

      // This function checks if the user's document in Firestore has a
      // 'restaurantId' field that matches the folder they are trying to access.
      function isRestaurantMember() {
        let userData = get(/databases/$(database)/documents/users/$(request.auth.uid)).data;
        return 'restaurantId' in userData && userData.restaurantId == restaurantId;
      }

      // This function checks if the user's document in Firestore has a
      // 'role' field with the value 'administrator'.
      function isAdministrator() {
        let userData = get(/databases/$(database)/documents/users/$(request.auth.uid)).data;
        return 'role' in userData && userData.role == 'administrator';
      }

      // Allow read and write access if the user is authenticated AND
      // they are either a member of this specific restaurant OR they are an administrator.
      allow read, write: if request.auth != null && (isRestaurantMember() || isAdministrator());
    }
  }
}