rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {

    // This rule applies to files inside a specific restaurant's 'documents' folder.
    match /documents/{restaurantId}/{allPaths=**} {

      // --- DEBUGGING STEP: SIMPLIFICATION TEST ---
      // The rule below is a temporary test to isolate the problem.
      // It allows any authenticated user to upload, bypassing the database check.
      // If uploads succeed with this rule, the problem is confirmed to be in the
      // 'isRestaurantMember' function's logic.
      // If it still fails, the issue is more fundamental (e.g., authentication state).
      //
      // After testing, this should be reverted to a more secure rule.

      allow read, write: if request.auth != null;

      // --- ORIGINAL COMPLEX RULE (CURRENTLY DISABLED FOR TESTING) ---
      /*
      function isRestaurantMember() {
        let userDocData = get(/databases/$(database)/documents/users/$(request.auth.uid)).data;
        return 'restaurantId' in userDocData && userDocData.restaurantId == restaurantId;
      }
      allow read, write: if request.auth != null && isRestaurantMember();
      */
    }
  }
}