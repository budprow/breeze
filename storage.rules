rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {
    // This rule applies to files inside a specific restaurant's 'documents' folder.
    match /documents/{restaurantId}/{allPaths=**} {

      // This is the final, correct rule using inline logic.
      // It allows access if the user is authenticated AND they meet
      // one of the two conditions below.
      allow read, write: if
        request.auth != null &&
        (
          // Condition 1 (Administrator): Check if the user document exists in Firestore
          // and if their role is 'administrator'.
          exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
          get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'administrator'
        ) || (
          // Condition 2 (Member): Check if the user document exists and if their
          // restaurantId matches the one in the path.
          exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
          get(/databases/$(database)/documents/users/$(request.auth.uid)).data.restaurantId == restaurantId
        );
    }
  }
}